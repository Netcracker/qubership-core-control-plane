name: Build

run-name: >
  Build Go Service —
  ${{ github.event_name }} (${{ github.head_ref || github.ref_name }}) —
  [${{ github.event_name == 'push' && format('{0}', github.event.head_commit.message) || '' }}
  ${{ github.event_name == 'pull_request' && format('{0}', github.event.pull_request.title) || '' }}]

on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build-test-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and load test-service image
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: |
            ghcr.io/netcracker/cp-test-service:latest
        context: ./
        file: ./control-plane-test-service/Dockerfile
        platforms: linux/amd64


  build-go-service:
    name: Build go service
    uses: netcracker/qubership-core-infra/.github/workflows/build-go-service.yaml@v1.1.0
    with:
      go-module-dir: control-plane
      actor: ${{ github.actor }}
      sonar-project-key: ${{ vars.SONAR_PROJECT_KEY }}
    secrets:
      sonar-token: ${{ secrets.SONAR_TOKEN }}
