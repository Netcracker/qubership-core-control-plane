name: Go build

on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  prepare_environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test-service snapshot
        run: |
          cd ./control-plane-test-service && mvn install

      - name: Build and load test-service image
        uses: docker/build-push-action@v6
        with:
          tags: |
            ghcr.io/netcracker/cp-test-service:1.0-SNAPSHOT
          context: ./control-plane-test-service
          file: ./control-plane-test-service/Dockerfile
          platforms: linux/amd64         
  build:
    needs: prepare_environment
    uses: netcracker/qubership-core-infra/.github/workflows/go-build-with-sonar.yaml@v1.0.5
    with:
      go-module-dir: control-plane
      actor: ${{ github.actor }}
      sonar-project-key: ${{ vars.SONAR_PROJECT_KEY }}
    secrets:
      sonar-token: ${{ secrets.SONAR_TOKEN }}
  
  cleanup:
    if: always()
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run Container Package Cleanup Action
        uses: netcracker/qubership-workflow-hub/actions/container-package-cleanup@7a4938da2973b95efe670c3b4cbb782d14b2cc9c
        with:
          threshold-days: 0
          included-tags: 'cp-test-service'
          excluded-tags: ''
          dry-run: false
          debug: false
        env:
          PACKAGE_TOKEN: ${{ secrets.GH_RWD_PACKAGE_TOKEN }}