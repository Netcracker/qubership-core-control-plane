// Code generated by MockGen. DO NOT EDIT.
// Source: ../../envoy/cache/builder/routeconfig/routepreparer.go

// Package mock_routeconfig is a generated GoMock package.
package mock_routeconfig

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/netcracker/qubership-core-control-plane/control-plane/v2/domain"
)

// MockRoutePreparer is a mock of RoutePreparer interface.
type MockRoutePreparer struct {
	ctrl     *gomock.Controller
	recorder *MockRoutePreparerMockRecorder
}

// MockRoutePreparerMockRecorder is the mock recorder for MockRoutePreparer.
type MockRoutePreparerMockRecorder struct {
	mock *MockRoutePreparer
}

// NewMockRoutePreparer creates a new mock instance.
func NewMockRoutePreparer(ctrl *gomock.Controller) *MockRoutePreparer {
	mock := &MockRoutePreparer{ctrl: ctrl}
	mock.recorder = &MockRoutePreparerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoutePreparer) EXPECT() *MockRoutePreparerMockRecorder {
	return m.recorder
}

// Prepare mocks base method.
func (m *MockRoutePreparer) Prepare(routes []*domain.Route) []*domain.Route {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Prepare", routes)
	ret0, _ := ret[0].([]*domain.Route)
	return ret0
}

// Prepare indicates an expected call of Prepare.
func (mr *MockRoutePreparerMockRecorder) Prepare(routes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Prepare", reflect.TypeOf((*MockRoutePreparer)(nil).Prepare), routes)
}
