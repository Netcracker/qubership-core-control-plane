// Code generated by MockGen. DO NOT EDIT.
// Source: ../../envoy/cache/event/processor.go

// Package mock_event is a generated GoMock package.
package mock_event

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	action "github.com/netcracker/qubership-core-control-plane/control-plane/v2/envoy/cache/action"
)

// MockActionsByNodeGroup is a mock of ActionsByNodeGroup interface.
type MockActionsByNodeGroup struct {
	ctrl     *gomock.Controller
	recorder *MockActionsByNodeGroupMockRecorder
}

// MockActionsByNodeGroupMockRecorder is the mock recorder for MockActionsByNodeGroup.
type MockActionsByNodeGroupMockRecorder struct {
	mock *MockActionsByNodeGroup
}

// NewMockActionsByNodeGroup creates a new mock instance.
func NewMockActionsByNodeGroup(ctrl *gomock.Controller) *MockActionsByNodeGroup {
	mock := &MockActionsByNodeGroup{ctrl: ctrl}
	mock.recorder = &MockActionsByNodeGroupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockActionsByNodeGroup) EXPECT() *MockActionsByNodeGroupMockRecorder {
	return m.recorder
}

// GetActionsByNode mocks base method.
func (m *MockActionsByNodeGroup) GetActionsByNode() map[string]action.ActionsMap {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActionsByNode")
	ret0, _ := ret[0].(map[string]action.ActionsMap)
	return ret0
}

// GetActionsByNode indicates an expected call of GetActionsByNode.
func (mr *MockActionsByNodeGroupMockRecorder) GetActionsByNode() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActionsByNode", reflect.TypeOf((*MockActionsByNodeGroup)(nil).GetActionsByNode))
}

// Put mocks base method.
func (m *MockActionsByNodeGroup) Put(nodeGroup string, envoyEntityType action.EnvoyEntity, granularUpdate action.GranularEntityUpdate) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Put", nodeGroup, envoyEntityType, granularUpdate)
}

// Put indicates an expected call of Put.
func (mr *MockActionsByNodeGroupMockRecorder) Put(nodeGroup, envoyEntityType, granularUpdate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockActionsByNodeGroup)(nil).Put), nodeGroup, envoyEntityType, granularUpdate)
}
