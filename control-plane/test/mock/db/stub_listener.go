// Code generated by MockGen. DO NOT EDIT.
// Source: ../../db/listener.go

// Package mock_db is a generated GoMock package.
package mock_db

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPersistentStorageListener is a mock of PersistentStorageListener interface.
type MockPersistentStorageListener struct {
	ctrl     *gomock.Controller
	recorder *MockPersistentStorageListenerMockRecorder
}

// MockPersistentStorageListenerMockRecorder is the mock recorder for MockPersistentStorageListener.
type MockPersistentStorageListenerMockRecorder struct {
	mock *MockPersistentStorageListener
}

// NewMockPersistentStorageListener creates a new mock instance.
func NewMockPersistentStorageListener(ctrl *gomock.Controller) *MockPersistentStorageListener {
	mock := &MockPersistentStorageListener{ctrl: ctrl}
	mock.recorder = &MockPersistentStorageListenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersistentStorageListener) EXPECT() *MockPersistentStorageListenerMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockPersistentStorageListener) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockPersistentStorageListenerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockPersistentStorageListener)(nil).Close))
}
