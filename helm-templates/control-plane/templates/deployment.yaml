---
kind: Deployment
apiVersion: apps/v1
metadata:
    name: '{{ .Values.SERVICE_NAME }}'
    labels:
        name: '{{ .Values.SERVICE_NAME }}'
        netcracker.cloud/disaster-recovery.manageable: 'true'
        app.kubernetes.io/name: '{{ .Values.SERVICE_NAME }}'
        app.kubernetes.io/instance: '{{ cat .Values.SERVICE_NAME "-" .Values.NAMESPACE | nospace | trunc 63 | trimSuffix "-" }}'
        app.kubernetes.io/version: '{{ .Values.ARTIFACT_DESCRIPTOR_VERSION }}'
        app.kubernetes.io/component: 'backend'
        app.kubernetes.io/part-of: 'Cloud-Core'
        app.kubernetes.io/managed-by: 'saasDeployer'
        app.kubernetes.io/technology: 'go'
        deployment.netcracker.com/sessionId: '{{ .Values.DEPLOYMENT_SESSION_ID }}'
    annotations:
        netcracker.cloud/start.stage: '1'
spec:
    replicas: {{ .Values.REPLICAS | default 1 }}
    strategy:
    {{- if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "recreate" }}
      type: Recreate
    {{- else if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "best_effort_controlled_rollout" }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 80%
    {{- else if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "ramped_slow_rollout" }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    {{- else if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "custom_rollout" }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: {{ .Values.DEPLOYMENT_STRATEGY_MAXSURGE | default "25%" }}
        maxUnavailable: {{ .Values.DEPLOYMENT_STRATEGY_MAXUNAVAILABLE | default "25%" }}
    {{- else }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    {{- end }}
    template:
        metadata:
            labels:
                name: '{{ .Values.SERVICE_NAME }}'
                app.kubernetes.io/name: '{{ .Values.SERVICE_NAME }}'
                app.kubernetes.io/instance: '{{ cat .Values.SERVICE_NAME "-" .Values.NAMESPACE | nospace | trunc 63 | trimSuffix "-" }}'
                app.kubernetes.io/version: '{{ .Values.ARTIFACT_DESCRIPTOR_VERSION }}'
                app.kubernetes.io/component: 'backend'
                app.kubernetes.io/part-of: 'Cloud-Core'
                app.kubernetes.io/managed-by: 'saasDeployer'
                app.kubernetes.io/technology: 'go'
        spec:
            serviceAccountName: '{{ .Values.SERVICE_NAME }}'
            volumes:
{{ if and .Values.READONLY_CONTAINER_FILE_SYSTEM_ENABLED (eq .Values.PAAS_PLATFORM "KUBERNETES") }}
            -   name: sslcerts
                emptyDir: {}
            -   name: cacerts
                emptyDir: {}
{{ end }}
            containers:
            -   name: '{{ .Values.SERVICE_NAME }}'
                image: '{{ .Values.IMAGE_REPOSITORY }}:{{ .Values.TAG }}'
                imagePullPolicy: Always
                volumeMounts:
{{ if and .Values.READONLY_CONTAINER_FILE_SYSTEM_ENABLED (eq .Values.PAAS_PLATFORM "KUBERNETES") }}
                -   name: sslcerts
                    mountPath: /etc/ssl/certs
                -   name: cacerts
                    mountPath: /usr/local/share/ca-certificates
{{ end }}
                args:
                - /app/control-plane
                ports:
                -   name: web
                    containerPort: 8080
                    protocol: TCP
                -   name: tls
                    containerPort: 8443
                    protocol: TCP
                -   name: grpc
                    containerPort: 15010
                    protocol: TCP
                env:
                -   name: CLOUD_NAMESPACE
                    valueFrom:
                        fieldRef:
                            fieldPath: metadata.namespace
                -   name: POD_NAME
                    valueFrom:
                        fieldRef:
                            fieldPath: metadata.name
                -   name: POD_IP
                    valueFrom:
                        fieldRef:
                            fieldPath: status.podIP
                -   name: MICROSERVICE_NAME
                    value: '{{ .Values.SERVICE_NAME }}'
                -   name: MICROSERVICE_NAMESPACE
                    value: null
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                -   name: GATEWAY_AUTH_HOST
                    value: gateway-auth-extension
                -   name: GATEWAYS_ALLOWED_ORIGIN
                    value: '{{ .Values.GATEWAYS_ALLOWED_ORIGIN }}'
                -   name: GATEWAYS_ALLOWED_HEADERS
                    value: '{{ .Values.GATEWAYS_ALLOWED_HEADERS }}'
                -   name: GATEWAYS_ACCESS_CONTROL_MAX_AGE
                    value: '{{ .Values.GATEWAYS_ACCESS_CONTROL_MAX_AGE }}'
                -   name: ENVOY_PROXY_ROUTES_TIMEOUT
                    value: '{{ .Values.TIMEOUT }}'
                -   name: ENVOY_PROXY_COMPRESSION_ENABLED
                    value: '{{ .Values.GATEWAYS_COMPRESSION_ENABLED }}'
                -   name: TRACING_ENABLED
                    value: '{{ .Values.TRACING_ENABLED }}'
                -   name: TRACING_HOST
                    value: '{{ .Values.TRACING_HOST }}'
                -   name: TRACING_SAMPLER_RATELIMITING
                    value: '{{ .Values.TRACING_SAMPLER_RATELIMITING }}'
                -   name: TRACING_SAMPLER_PROBABILISTIC
                    value: '{{ .Values.TRACING_SAMPLER_PROBABILISTIC }}'
                -   name: ENVOY_PROXY_GOOGLERE2_MAXSIZE
                    value: '{{ .Values.GOOGLERE2_MAXSIZE }}'
                -   name: ENVOY_PROXY_GOOGLERE2_WARNSIZE
                    value: '{{ .Values.GOOGLERE2_WARN_SIZE }}'
                -   name: GRPC_GO_RETRY
                    value: '{{ .Values.GRPC_GO_RETRY }}'
                -   name: SWIM_PORT
                    value: '{{ .Values.SWIM_PORT }}'
                -   name: IP_STACK
                    value: '{{ .Values.IP_STACK }}'
                -   name: PG_HOST
                    valueFrom:
                        secretKeyRef:
                            name: '{{ .Values.DB_CREDENTIALS_SECRET }}'
                            key: host
                -   name: PG_PORT
                    valueFrom:
                        secretKeyRef:
                            name: '{{ .Values.DB_CREDENTIALS_SECRET }}'
                            key: port
                -   name: PG_DB
                    valueFrom:
                        secretKeyRef:
                            name: '{{ .Values.DB_CREDENTIALS_SECRET }}'
                            key: database
                -   name: PG_USER
                    valueFrom:
                        secretKeyRef:
                            name: '{{ .Values.DB_CREDENTIALS_SECRET }}'
                            key: username
                -   name: PG_PASSWD
                    valueFrom:
                        secretKeyRef:
                            name: '{{ .Values.DB_CREDENTIALS_SECRET }}'
                            key: password
                -   name: PG_TLS
                    valueFrom:
                      secretKeyRef:
                        name: '{{ .Values.DB_CREDENTIALS_SECRET }}'
                        key: tls
                        optional: true
                -   name: ENVOY_PROXY_CONNECTION_PER_CONNECTION_BUFFER_LIMIT_MEGABYTES
                    value: '{{ .Values.CONNECTION_BUFFER_SIZE_MEGABYTES }}'
                -   name: GOGC
                    value: '{{ .Values.GOGC }}'
                -   name: CLOUD_PRIVATE_HOST
                    value: '{{ .Values.CLOUD_PRIVATE_HOST }}'
                -   name: PUBLIC_GATEWAY_ROUTE_HOST
                    value: '{{ .Values.PUBLIC_GATEWAY_ROUTE_HOST }}'
                -   name: PRIVATE_GATEWAY_ROUTE_HOST
                    value: '{{ .Values.PRIVATE_GATEWAY_ROUTE_HOST }}'
                -   name: CLOUD_PUBLIC_HOST
                    value: '{{ .Values.CLOUD_PUBLIC_HOST }}'
                -   name: BASELINE_PROJ
                    value: '{{ coalesce .Values.BASELINE_CONTROLLER .Values.BASELINE_ORIGIN .Values.BASELINE_PROJ }}'
                -   name: COMPOSITE_PLATFORM
                    value: '{{ not (empty (.Values.BASELINE_ORIGIN)) }}'
                -   name: EXECUTION_MODE
                    value: '{{ .Values.EXECUTION_MODE }}'
                -   name: DISABLE_IP_ROUTE_REGISTRATION
                    value: '{{ .Values.DISABLE_IP_ROUTE_REGISTRATION }}'
                -   name: DNS_LOOKUP_FAMILY
                    value: '{{ .Values.DNS_LOOKUP_FAMILY }}'
                - name: LOG_LEVEL
                  value: '{{ .Values.LOG_LEVEL }}'
                - name: ORIGIN_NAMESPACE
                  value: "{{ .Values.ORIGIN_NAMESPACE }}"
                - name: PEER_NAMESPACE
                  value: "{{ .Values.PEER_NAMESPACE }}"
                - name: ECDH_CURVES
                  value: "{{ .Values.ECDH_CURVES }}"
                - name: CONSUL_ENABLED
                  value: '{{ .Values.CONSUL_ENABLED }}'
                {{ if .Values.CONSUL_ENABLED }}
                - name: CONSUL_URL
                  value: '{{ .Values.CONSUL_URL }}'
                {{ end }}
                - name: SNI_PROPAGATION_ENABLED
                  value: '{{ .Values.SNI_PROPAGATION_ENABLED }}'
                {{- if .Values.EGRESS_RESPONSE_HEADERS_TO_REMOVE }}
                - name: EGRESS_RESPONSE_HEADERS_TO_REMOVE
                  value: '{{ .Values.EGRESS_RESPONSE_HEADERS_TO_REMOVE }}'
                {{- end }}
                {{- if .Values.EGRESS_REQUEST_HEADERS_TO_REMOVE }}
                - name: EGRESS_REQUEST_HEADERS_TO_REMOVE
                  value: '{{ .Values.EGRESS_REQUEST_HEADERS_TO_REMOVE }}'
                {{- end }}
                resources:
                    requests:
                        cpu: '{{ .Values.CPU_REQUEST }}'
                        memory: '{{ .Values.MEMORY_LIMIT }}'
                    limits:
                        cpu: '{{ .Values.CPU_LIMIT }}'
                        memory: '{{ .Values.MEMORY_LIMIT }}'
                livenessProbe:
                    failureThreshold: 4
                    httpGet:
                        path: /health
                        port: web
                        scheme: HTTP
                    initialDelaySeconds: 180
                    timeoutSeconds: 5
                readinessProbe:
                    failureThreshold: 4
                    httpGet:
                        path: /ready
                        port: web
                        scheme: HTTP
                    initialDelaySeconds: 5
                    timeoutSeconds: 5
                securityContext:
                {{ if eq .Values.PAAS_PLATFORM "KUBERNETES" }}
                    runAsGroup: 10001
                {{ end }}
                    readOnlyRootFilesystem: {{ and .Values.READONLY_CONTAINER_FILE_SYSTEM_ENABLED (eq .Values.PAAS_PLATFORM "KUBERNETES") }}
                    runAsNonRoot: true
                    seccompProfile:
                        type: RuntimeDefault
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                          - ALL
            topologySpreadConstraints:
{{- if .Values.CLOUD_TOPOLOGIES }}
{{- range $v := .Values.CLOUD_TOPOLOGIES }}
              - topologyKey: {{ $v.topologyKey }}
                maxSkew: {{ $v.maxSkew | default 1 }}
                whenUnsatisfiable: {{ $v.whenUnsatisfiable | default "ScheduleAnyway" }}
                labelSelector:
                  matchLabels:
                    name: "{{ $.Values.SERVICE_NAME }}"
{{- end }}
{{- else }}
              - maxSkew: 1
                topologyKey: "{{ .Values.CLOUD_TOPOLOGY_KEY }}"
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    name: "{{ .Values.SERVICE_NAME }}"
{{- end }}
    selector:
        matchLabels:
            name: '{{ .Values.SERVICE_NAME }}'
